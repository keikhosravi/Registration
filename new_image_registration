clc
clear
close all

SHG_list = dir('Z:\Cole\SHG-HE core registration\Dataset4\SHG');
HE_path = 'Z:\Cole\SHG-HE core registration\Dataset4\HE\';
SHG_path='Z:\Cole\SHG-HE core registration\Dataset4\SHG\';
%width_mean=zeros(length(dirlist),1);
for fileind = 1:length(SHG_list)
       tic 
    SHG_file_spec=SHG_list(fileind);
    [SHG_pathstr,SHG_name,SHG_ext] = fileparts(SHG_file_spec.name);
    
    if(strcmp(SHG_ext,'.tif'))
       
            SHG_image=[SHG_path SHG_name SHG_ext];
            HE_image=[HE_path SHG_name(1:end-3) 'HE' SHG_ext];
        
    
he = imread(HE_image);
he=im2double(he);
%figure;imshow(he)
max_he=max(max(max(he)));
he_adj = imadjust(he,[0 max_he],[0 1]);
he_adj=im2uint8(he_adj);
%figure;imshow(he_adj)
he_nuclei=he_adj;
he_red=he_adj;
he_gray=rgb2gray(he_adj);
he_gray=im2double(he_gray);
% he_gray1=he_gray;
RGB = he_adj;

S = decorrstretch(RGB,'tol',0.01);
% figure, imshow(RGB), title('Original Image')
% figure,  imshow(S), title('Enhanced Image')
he_adj=S;

%figure;imshow(he_gray)
[m,n]=size(he_gray);
for i=1:m
for j=1:n
if(he_adj(i,j,1)<120&&he_adj(i,j,2)>200&&he_adj(i,j,3)<120)
he_nuclei(i,j,:)=he_adj(i,j,:);
else
  he_nuclei(i,j,:)=0;  
% he_gray(i,j,:)=0;
end
if(he_adj(i,j,1)>240&&he_adj(i,j,2)<190&&he_adj(i,j,3)<190)
he_red(i,j,1)=he_adj(i,j,1);
else
he_red(i,j,:)=0;
end
end
end

cform = makecform('srgb2lab');
lab_he = applycform(he_red,cform);
ab = double(lab_he(:,:,2:3));
nrows = size(ab,1);
ncols = size(ab,2);
ab = reshape(ab,nrows*ncols,2);
nColors = 3;
% repeat the clustering 3 times to avoid local minima
[cluster_idx, cluster_center] = kmeans(ab,nColors,'distance','sqEuclidean', ...
'Replicates',3);
pixel_labels = reshape(cluster_idx,nrows,ncols);
% figure;imshow(pixel_labels,[]), title('image labeled by cluster index');
segmented_images = cell(1,3);
rgb_label = repmat(pixel_labels,[1 1 3]);
for k = 1:nColors
color = he;
color(rgb_label ~= k) = 0;
segmented_images{k} = color;
% tit=['objects in cluster ' num2str(k)];
% figure;imshow(segmented_images{k}), title(tit);
end

mean_cluster_value = mean(cluster_center,2);
[tmp, idx] = sort(mean_cluster_value);
% HE_collagen=segmented_images{idx(nColors)};
% figure;imshow(HE_collagen)
HE_collagen=im2double(rgb2gray(segmented_images{idx(nColors)})+rgb2gray(segmented_images{idx(nColors-1)}));
% figure;imshow(HE_collagen)
gray_nuclei=im2double(rgb2gray(he_nuclei));
h_nuclei = fspecial('gaussian', 4, 0.5);
nuclei_filtered = imfilter(im2double(gray_nuclei),h_nuclei);
BW_nuclei=im2bw(im2double(nuclei_filtered),0.001);
% figure;imshow(BW_nuclei)
BW_nuclei_discard = bwareaopen(BW_nuclei, 2000);
% figure;imshow(BW_nuclei_discard)
se = strel('disk',4);
BW_nuclei_dilated = imdilate(BW_nuclei_discard,se);
% figure;imshow(I2)
BW_nuclei_filled = imfill(BW_nuclei_dilated,'holes');
% figure;imshow(BW_nuclei_filled)
HE_collagen_exclude=HE_collagen.*(~BW_nuclei_filled);




HE_collagen_BW=im2bw(HE_collagen_exclude,0.01);
BW_discard = bwareaopen(HE_collagen_BW, 200);
HE_collagen_exclude=HE_collagen_exclude.*BW_discard;
% figure;imshow(HE_collagen_exclude)
% HE_collagen=im2double(rgb2gray(segmented_images{nColors}));
% HE_collagen_exclude=HE_collagen.*(~BW_nuclei_filled);
% figure;imshow(HE_collagen_exclude)

fixed  = imread(SHG_image);
fixed=imadjust(fixed);

% figure;imshow(fixed)
moving=imresize(HE_collagen_exclude,size(fixed));
% figure;imshow(moving)
[optimizer,metric] = imregconfig('multimodal');
% movingRegisteredDefault = imregister(moving, fixed, 'affine', optimizer, metric);
% figure, imshowpair(movingRegisteredDefault, fixed)
% title('A: Default registration')


disp(optimizer)
disp(metric)
optimizer.InitialRadius = optimizer.InitialRadius/3.5;
movingRegisteredAdjustedInitialRadius = imregister(moving, fixed, 'affine', optimizer, metric);
% figure, imshowpair(movingRegisteredAdjustedInitialRadius, fixed)
% title('Adjusted InitialRadius')
optimizer.MaximumIterations = 700;
movingRegisteredAdjustedInitialRadius700 = imregister(moving, fixed, 'affine', optimizer, metric);
% figure, imshowpair(movingRegisteredAdjustedInitialRadius300, fixed)
% title('B: Adjusted InitialRadius, MaximumIterations = 700, Adjusted InitialRadius.')
tformSimilarity = imregtform(moving,fixed,'similarity',optimizer,metric);
Rfixed = imref2d(size(fixed));
movingRegisteredRigid = imwarp(moving,tformSimilarity,'OutputView',Rfixed);
% figure, imshowpair(movingRegisteredRigid, fixed);
% title('C: Registration based on similarity transformation model.');
tformSimilarity.T
[movingRegisteredAffineWithIC treg tform]= imreg_new3(moving,fixed,'affine',optimizer,metric,...
'InitialTransformation',tformSimilarity);
% figure, imshowpair(movingRegisteredAffineWithIC,fixed);
% title('D: Registration from affine model based on similarity initial condition.');
% 
% tform= imregtform(moving,fixed,'affine',optimizer,metric,...
% 'InitialTransformation',tformSimilarity);
% movingRegisteredAffineWithIC1=imwarp(moving,tform);
% figure, imshowpair(movingRegisteredAffineWithIC1,fixed);
% title('D: Registration from affine model based on similarity initial condition1.');
%%%%%%%
Rmoving=imref2d(size(moving));
he_registered=imresize(he,size(fixed));
% tform = imregtform(moving, movingRegisteredAffineWithIC, 'affine', optimizer, metric);
B = imwarp(he_registered,Rmoving,tform,'OutputView',Rfixed);
% figure
% imshowpair(B, fixed)
% title('registered');
Registered_image=['Z:\Cole\SHG-HE core registration\Dataset4\Registered HE\' SHG_name(1:end-3) 'HE_registered' SHG_ext]; 
imwrite(B,Registered_image);

pause(200)
toc
%%%%%%%%%%%
% figure;imshowpair(movingRegisteredDefault, fixed)
% title('A - Default settings.');
% figure;imshowpair(movingRegisteredAdjustedInitialRadius, fixed)
% title('B - Adjusted InitialRadius, 100 Iterations.');
% figure;imshowpair(movingRegisteredAdjustedInitialRadius700, fixed)
% title('C - Adjusted InitialRadius, 700 Iterations.');
% figure;imshowpair(movingRegisteredAffineWithIC, fixed)
% title('D - Registration from affine model based on similarity initial condition.');

    end
end
